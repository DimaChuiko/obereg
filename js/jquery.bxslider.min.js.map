{"version":3,"sources":["jquery.bxslider.min.js"],"names":["$","defaults","mode","slideSelector","infiniteLoop","hideControlOnEnd","speed","easing","slideMargin","startSlide","randomStart","captions","ticker","tickerHover","adaptiveHeight","adaptiveHeightSpeed","video","useCSS","preloadImages","responsive","wrapperClass","touchEnabled","swipeThreshold","oneToOneTouch","preventDefaultSwipeX","preventDefaultSwipeY","ariaLive","ariaHidden","keyboardEnabled","pager","pagerType","pagerShortSeparator","pagerSelector","buildPager","pagerCustom","controls","nextText","prevText","nextSelector","prevSelector","autoControls","startText","stopText","autoControlsCombine","autoControlsSelector","auto","pause","autoStart","autoDirection","stopAutoOnClick","autoHover","autoDelay","autoSlideForOnePage","minSlides","maxSlides","moveSlides","slideWidth","shrinkItems","onSliderLoad","onSlideBefore","onSlideAfter","onSlideNext","onSlidePrev","onSliderResize","fn","bxSlider","options","this","length","each","slider","el","windowWidth","window","width","windowHeight","height","data","init","settings","extend","parseInt","children","Math","floor","random","active","index","carousel","minThreshold","maxThreshold","working","interval","animProp","usingCSS","div","document","createElement","props","i","undefined","style","cssPrefix","replace","toLowerCase","attr","setup","getNumberSlidesShowing","slidesShowing","childWidth","viewport","first","populatePager","pagerHtml","linkContent","pagerQty","getPagerQty","isFunction","pagerEl","addClass","html","applyAriaHiddenAttributes","startVisibleIndex","numberOfSlidesShowing","slice","preloadSelector","eq","wrap","parent","loader","prepend","css","position","overflow","maxWidth","getViewportMaxWidth","float","listStyle","getSlideWidth","zIndex","display","slideZIndex","appendCaptions","last","fitVids","appendControls","appendControlsAuto","appendPager","after","loadElements","start","selector","callback","total","find","count","one","complete","trigger","sliceAppend","clone","slicePrepend","append","remove","setSlidePosition","getViewportHeight","redrawSlider","call","initialized","bind","resizeWindow","initAuto","initTicker","updatePagerActive","updateDirectionControls","initTouch","keydown","keyPress","currentIndex","getMoveBy","add","outerHeight","max","apply","map","get","parseFloat","newElWidth","wrapWidth","ceil","breakPoint","counter","lastChild","lastShowingIndex","setPositionProperty","left","outerWidth","top","value","type","duration","params","animateObj","propValue","e","target","is","unbind","updateAfterSlideTransition","resetValue","tickerLoop","animate","on","clickPagerBind","next","prev","clickNextBind","clickPrevBind","directionEl","stop","autoEl","clickStartBind","clickStopBind","updateAutoControls","title","preventDefault","hasClass","stopAuto","goToNextSlide","goToPrevSlide","startAuto","pagerLink","pagerIndex","currentTarget","goToSlide","slideIndex","len","removeClass","oldIndex","state","setTimeout","focus","blur","hover","autoPaused","transform","idx","ratio","property","newSpeed","totalDimens","startPosition","split","abs","resumeSpeed","animateProperty","reset","win","bounds","activeElementTag","activeElement","tagName","RegExp","exec","scrollTop","scrollLeft","offset","right","bottom","keyCode","touch","x","y","end","onTouchStart","originalPos","orig","originalEvent","touchPoints","changedTouches","pageX","pageY","setPointerCapture","pointerId","onTouchMove","onTouchEnd","onPointerCancel","releasePointerCapture","xMovement","yMovement","change","distance","windowWidthNew","windowHeightNew","direction","requestEl","performTransition","moveBy","filter","fadeOut","fadeIn","preventControlUpdate","setInterval","clearInterval","getCurrentSlide","getCurrentSlideElement","getSlideElement","getSlideCount","isWorking","destroySlider","removeAttr","unwrap","removeData","reloadSlider","jQuery"],"mappings":"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","file":"jquery.bxslider.min.js","sourcesContent":["/**\n * bxSlider v4.2.12\n * Copyright 2013-2015 Steven Wanderski\n * Written while drinking Belgian ales and listening to jazz\n * Licensed under MIT (http://opensource.org/licenses/MIT)\n */\n\n;(function($) {\n\n  var defaults = {\n\n    // GENERAL\n    mode: 'horizontal',\n    slideSelector: '',\n    infiniteLoop: true,\n    hideControlOnEnd: false,\n    speed: 500,\n    easing: null,\n    slideMargin: 0,\n    startSlide: 0,\n    randomStart: false,\n    captions: false,\n    ticker: false,\n    tickerHover: false,\n    adaptiveHeight: false,\n    adaptiveHeightSpeed: 500,\n    video: false,\n    useCSS: true,\n    preloadImages: 'visible',\n    responsive: true,\n    //slideZIndex: 50,\n    wrapperClass: 'bx-wrapper',\n\n    // TOUCH\n    touchEnabled: true,\n    swipeThreshold: 50,\n    oneToOneTouch: true,\n    preventDefaultSwipeX: true,\n    preventDefaultSwipeY: false,\n\n    // ACCESSIBILITY\n    ariaLive: true,\n    ariaHidden: true,\n\n    // KEYBOARD\n    keyboardEnabled: false,\n\n    // PAGER\n    pager: true,\n    pagerType: 'full',\n    pagerShortSeparator: ' / ',\n    pagerSelector: null,\n    buildPager: null,\n    pagerCustom: null,\n\n    // CONTROLS\n    controls: true,\n    nextText: 'Next',\n    prevText: 'Prev',\n    nextSelector: null,\n    prevSelector: null,\n    autoControls: false,\n    startText: 'Start',\n    stopText: 'Stop',\n    autoControlsCombine: false,\n    autoControlsSelector: null,\n\n    // AUTO\n    auto: false,\n    pause: 4000,\n    autoStart: true,\n    autoDirection: 'next',\n    stopAutoOnClick: false,\n    autoHover: false,\n    autoDelay: 0,\n    autoSlideForOnePage: false,\n\n    // CAROUSEL\n    minSlides: 1,\n    maxSlides: 1,\n    moveSlides: 0,\n    slideWidth: 0,\n    shrinkItems: false,\n\n    // CALLBACKS\n    onSliderLoad: function() { return true; },\n    onSlideBefore: function() { return true; },\n    onSlideAfter: function() { return true; },\n    onSlideNext: function() { return true; },\n    onSlidePrev: function() { return true; },\n    onSliderResize: function() { return true; }\n  };\n\n  $.fn.bxSlider = function(options) {\n\n    if (this.length === 0) {\n      return this;\n    }\n\n    // support multiple elements\n    if (this.length > 1) {\n      this.each(function() {\n        $(this).bxSlider(options);\n      });\n      return this;\n    }\n\n    // create a namespace to be used throughout the plugin\n    var slider = {},\n    // set a reference to our slider element\n    el = this,\n    // get the original window dimens (thanks a lot IE)\n    windowWidth = $(window).width(),\n    windowHeight = $(window).height();\n\n    // Return if slider is already initialized\n    if ($(el).data('bxSlider')) { return; }\n\n    /**\n     * ===================================================================================\n     * = PRIVATE FUNCTIONS\n     * ===================================================================================\n     */\n\n    /**\n     * Initializes namespace settings to be used throughout plugin\n     */\n    var init = function() {\n      // Return if slider is already initialized\n      if ($(el).data('bxSlider')) { return; }\n      // merge user-supplied options with the defaults\n      slider.settings = $.extend({}, defaults, options);\n      // parse slideWidth setting\n      slider.settings.slideWidth = parseInt(slider.settings.slideWidth);\n      // store the original children\n      slider.children = el.children(slider.settings.slideSelector);\n      // check if actual number of slides is less than minSlides / maxSlides\n      if (slider.children.length < slider.settings.minSlides) { slider.settings.minSlides = slider.children.length; }\n      if (slider.children.length < slider.settings.maxSlides) { slider.settings.maxSlides = slider.children.length; }\n      // if random start, set the startSlide setting to random number\n      if (slider.settings.randomStart) { slider.settings.startSlide = Math.floor(Math.random() * slider.children.length); }\n      // store active slide information\n      slider.active = { index: slider.settings.startSlide };\n      // store if the slider is in carousel mode (displaying / moving multiple slides)\n      slider.carousel = slider.settings.minSlides > 1 || slider.settings.maxSlides > 1 ? true : false;\n      // if carousel, force preloadImages = 'all'\n      if (slider.carousel) { slider.settings.preloadImages = 'all'; }\n      // calculate the min / max width thresholds based on min / max number of slides\n      // used to setup and update carousel slides dimensions\n      slider.minThreshold = (slider.settings.minSlides * slider.settings.slideWidth) + ((slider.settings.minSlides - 1) * slider.settings.slideMargin);\n      slider.maxThreshold = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n      // store the current state of the slider (if currently animating, working is true)\n      slider.working = false;\n      // initialize the controls object\n      slider.controls = {};\n      // initialize an auto interval\n      slider.interval = null;\n      // determine which property to use for transitions\n      slider.animProp = slider.settings.mode === 'vertical' ? 'top' : 'left';\n      // determine if hardware acceleration can be used\n      slider.usingCSS = slider.settings.useCSS && slider.settings.mode !== 'fade' && (function() {\n        // create our test div element\n        var div = document.createElement('div'),\n        // css transition properties\n        props = ['WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];\n        // test for each property\n        for (var i = 0; i < props.length; i++) {\n          if (div.style[props[i]] !== undefined) {\n            slider.cssPrefix = props[i].replace('Perspective', '').toLowerCase();\n            slider.animProp = '-' + slider.cssPrefix + '-transform';\n            return true;\n          }\n        }\n        return false;\n      }());\n      // if vertical mode always make maxSlides and minSlides equal\n      if (slider.settings.mode === 'vertical') { slider.settings.maxSlides = slider.settings.minSlides; }\n      // save original style data\n      el.data('origStyle', el.attr('style'));\n      el.children(slider.settings.slideSelector).each(function() {\n        $(this).data('origStyle', $(this).attr('style'));\n      });\n\n      // perform all DOM / CSS modifications\n      setup();\n    };\n\n    /**\n     * Performs all DOM and CSS modifications\n     */\n    var setup = function() {\n      var preloadSelector = slider.children.eq(slider.settings.startSlide); // set the default preload selector (visible)\n\n      // wrap el in a wrapper\n      el.wrap('<div class=\"' + slider.settings.wrapperClass + '\"><div class=\"bx-viewport\"></div></div>');\n      // store a namespace reference to .bx-viewport\n      slider.viewport = el.parent();\n\n      // add aria-live if the setting is enabled and ticker mode is disabled\n      if (slider.settings.ariaLive && !slider.settings.ticker) {\n        slider.viewport.attr('aria-live', 'polite');\n      }\n      // add a loading div to display while images are loading\n      slider.loader = $('<div class=\"bx-loading\" />');\n      slider.viewport.prepend(slider.loader);\n      // set el to a massive width, to hold any needed slides\n      // also strip any margin and padding from el\n      el.css({\n        width: slider.settings.mode === 'horizontal' ? (slider.children.length * 1000 + 215) + '%' : 'auto',\n        position: 'relative'\n      });\n      // if using CSS, add the easing property\n      if (slider.usingCSS && slider.settings.easing) {\n        el.css('-' + slider.cssPrefix + '-transition-timing-function', slider.settings.easing);\n      // if not using CSS and no easing value was supplied, use the default JS animation easing (swing)\n      } else if (!slider.settings.easing) {\n        slider.settings.easing = 'swing';\n      }\n      // make modifications to the viewport (.bx-viewport)\n      slider.viewport.css({\n        width: '100%',\n        overflow: 'hidden',\n        position: 'relative'\n      });\n      slider.viewport.parent().css({\n        maxWidth: getViewportMaxWidth()\n      });\n      // apply css to all slider children\n      slider.children.css({\n        float: slider.settings.mode === 'horizontal' ? 'left' : 'none',\n        listStyle: 'none',\n        position: 'relative'\n      });\n      // apply the calculated width after the float is applied to prevent scrollbar interference\n      slider.children.css('width', getSlideWidth());\n      // if slideMargin is supplied, add the css\n      if (slider.settings.mode === 'horizontal' && slider.settings.slideMargin > 0) { slider.children.css('marginRight', slider.settings.slideMargin); }\n      if (slider.settings.mode === 'vertical' && slider.settings.slideMargin > 0) { slider.children.css('marginBottom', slider.settings.slideMargin); }\n      // if \"fade\" mode, add positioning and z-index CSS\n      if (slider.settings.mode === 'fade') {\n        slider.children.css({\n          position: 'absolute',\n          zIndex: 0,\n          display: 'none'\n        });\n        // prepare the z-index on the showing element\n        slider.children.eq(slider.settings.startSlide).css({zIndex: slider.settings.slideZIndex, display: 'block'});\n      }\n      // create an element to contain all slider controls (pager, start / stop, etc)\n      slider.controls.el = $('<div class=\"bx-controls\" />');\n      // if captions are requested, add them\n      if (slider.settings.captions) { appendCaptions(); }\n      // check if startSlide is last slide\n      slider.active.last = slider.settings.startSlide === getPagerQty() - 1;\n      // if video is true, set up the fitVids plugin\n      if (slider.settings.video) { el.fitVids(); }\n      if (slider.settings.preloadImages === 'all' || slider.settings.ticker) { preloadSelector = slider.children; }\n      // only check for control addition if not in \"ticker\" mode\n      if (!slider.settings.ticker) {\n        // if controls are requested, add them\n        if (slider.settings.controls) { appendControls(); }\n        // if auto is true, and auto controls are requested, add them\n        if (slider.settings.auto && slider.settings.autoControls) { appendControlsAuto(); }\n        // if pager is requested, add it\n        if (slider.settings.pager) { appendPager(); }\n        // if any control option is requested, add the controls wrapper\n        if (slider.settings.controls || slider.settings.autoControls || slider.settings.pager) { slider.viewport.after(slider.controls.el); }\n      // if ticker mode, do not allow a pager\n      } else {\n        slider.settings.pager = false;\n      }\n      loadElements(preloadSelector, start);\n    };\n\n    var loadElements = function(selector, callback) {\n      var total = selector.find('img:not([src=\"\"]), iframe').length,\n      count = 0;\n      if (total === 0) {\n        callback();\n        return;\n      }\n      selector.find('img:not([src=\"\"]), iframe').each(function() {\n        $(this).one('load error', function() {\n          if (++count === total) { callback(); }\n        }).each(function() {\n          if (this.complete) { $(this).trigger('load'); }\n        });\n      });\n    };\n\n    /**\n     * Start the slider\n     */\n    var start = function() {\n      // if infinite loop, prepare additional slides\n      if (slider.settings.infiniteLoop && slider.settings.mode !== 'fade' && !slider.settings.ticker) {\n        var slice    = slider.settings.mode === 'vertical' ? slider.settings.minSlides : slider.settings.maxSlides,\n        sliceAppend  = slider.children.slice(0, slice).clone(true).addClass('bx-clone'),\n        slicePrepend = slider.children.slice(-slice).clone(true).addClass('bx-clone');\n        if (slider.settings.ariaHidden) {\n          sliceAppend.attr('aria-hidden', true);\n          slicePrepend.attr('aria-hidden', true);\n        }\n        el.append(sliceAppend).prepend(slicePrepend);\n      }\n      // remove the loading DOM element\n      slider.loader.remove();\n      // set the left / top position of \"el\"\n      setSlidePosition();\n      // if \"vertical\" mode, always use adaptiveHeight to prevent odd behavior\n      if (slider.settings.mode === 'vertical') { slider.settings.adaptiveHeight = true; }\n      // set the viewport height\n      slider.viewport.height(getViewportHeight());\n      // make sure everything is positioned just right (same as a window resize)\n      el.redrawSlider();\n      // onSliderLoad callback\n      slider.settings.onSliderLoad.call(el, slider.active.index);\n      // slider has been fully initialized\n      slider.initialized = true;\n      // bind the resize call to the window\n      if (slider.settings.responsive) { $(window).bind('resize', resizeWindow); }\n      // if auto is true and has more than 1 page, start the show\n      if (slider.settings.auto && slider.settings.autoStart && (getPagerQty() > 1 || slider.settings.autoSlideForOnePage)) { initAuto(); }\n      // if ticker is true, start the ticker\n      if (slider.settings.ticker) { initTicker(); }\n      // if pager is requested, make the appropriate pager link active\n      if (slider.settings.pager) { updatePagerActive(slider.settings.startSlide); }\n      // check for any updates to the controls (like hideControlOnEnd updates)\n      if (slider.settings.controls) { updateDirectionControls(); }\n      // if touchEnabled is true, setup the touch events\n      if (slider.settings.touchEnabled && !slider.settings.ticker) { initTouch(); }\n      // if keyboardEnabled is true, setup the keyboard events\n      if (slider.settings.keyboardEnabled && !slider.settings.ticker) {\n        $(document).keydown(keyPress);\n      }\n    };\n\n    /**\n     * Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value\n     */\n    var getViewportHeight = function() {\n      var height = 0;\n      // first determine which children (slides) should be used in our height calculation\n      var children = $();\n      // if mode is not \"vertical\" and adaptiveHeight is false, include all children\n      if (slider.settings.mode !== 'vertical' && !slider.settings.adaptiveHeight) {\n        children = slider.children;\n      } else {\n        // if not carousel, return the single active child\n        if (!slider.carousel) {\n          children = slider.children.eq(slider.active.index);\n        // if carousel, return a slice of children\n        } else {\n          // get the individual slide index\n          var currentIndex = slider.settings.moveSlides === 1 ? slider.active.index : slider.active.index * getMoveBy();\n          // add the current slide to the children\n          children = slider.children.eq(currentIndex);\n          // cycle through the remaining \"showing\" slides\n          for (i = 1; i <= slider.settings.maxSlides - 1; i++) {\n            // if looped back to the start\n            if (currentIndex + i >= slider.children.length) {\n              children = children.add(slider.children.eq(i - 1));\n            } else {\n              children = children.add(slider.children.eq(currentIndex + i));\n            }\n          }\n        }\n      }\n      // if \"vertical\" mode, calculate the sum of the heights of the children\n      if (slider.settings.mode === 'vertical') {\n        children.each(function(index) {\n          height += $(this).outerHeight();\n        });\n        // add user-supplied margins\n        if (slider.settings.slideMargin > 0) {\n          height += slider.settings.slideMargin * (slider.settings.minSlides - 1);\n        }\n      // if not \"vertical\" mode, calculate the max height of the children\n      } else {\n        height = Math.max.apply(Math, children.map(function() {\n          return $(this).outerHeight(false);\n        }).get());\n      }\n\n      if (slider.viewport.css('box-sizing') === 'border-box') {\n        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom')) +\n              parseFloat(slider.viewport.css('border-top-width')) + parseFloat(slider.viewport.css('border-bottom-width'));\n      } else if (slider.viewport.css('box-sizing') === 'padding-box') {\n        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom'));\n      }\n\n      return height;\n    };\n\n    /**\n     * Returns the calculated width to be used for the outer wrapper / viewport\n     */\n    var getViewportMaxWidth = function() {\n      var width = '100%';\n      if (slider.settings.slideWidth > 0) {\n        if (slider.settings.mode === 'horizontal') {\n          width = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n        } else {\n          width = slider.settings.slideWidth;\n        }\n      }\n      return width;\n    };\n\n    /**\n     * Returns the calculated width to be applied to each slide\n     */\n    var getSlideWidth = function() {\n      var newElWidth = slider.settings.slideWidth, // start with any user-supplied slide width\n      wrapWidth      = slider.viewport.width();    // get the current viewport width\n      // if slide width was not supplied, or is larger than the viewport use the viewport width\n      if (slider.settings.slideWidth === 0 ||\n        (slider.settings.slideWidth > wrapWidth && !slider.carousel) ||\n        slider.settings.mode === 'vertical') {\n        newElWidth = wrapWidth;\n      // if carousel, use the thresholds to determine the width\n      } else if (slider.settings.maxSlides > 1 && slider.settings.mode === 'horizontal') {\n        if (wrapWidth > slider.maxThreshold) {\n          return newElWidth;\n        } else if (wrapWidth < slider.minThreshold) {\n          newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.minSlides - 1))) / slider.settings.minSlides;\n        } else if (slider.settings.shrinkItems) {\n          newElWidth = Math.floor((wrapWidth + slider.settings.slideMargin) / (Math.ceil((wrapWidth + slider.settings.slideMargin) / (newElWidth + slider.settings.slideMargin))) - slider.settings.slideMargin);\n        }\n      }\n      return newElWidth;\n    };\n\n    /**\n     * Returns the number of slides currently visible in the viewport (includes partially visible slides)\n     */\n    var getNumberSlidesShowing = function() {\n      var slidesShowing = 1,\n      childWidth = null;\n      if (slider.settings.mode === 'horizontal' && slider.settings.slideWidth > 0) {\n        // if viewport is smaller than minThreshold, return minSlides\n        if (slider.viewport.width() < slider.minThreshold) {\n          slidesShowing = slider.settings.minSlides;\n        // if viewport is larger than maxThreshold, return maxSlides\n        } else if (slider.viewport.width() > slider.maxThreshold) {\n          slidesShowing = slider.settings.maxSlides;\n        // if viewport is between min / max thresholds, divide viewport width by first child width\n        } else {\n          childWidth = slider.children.first().width() + slider.settings.slideMargin;\n          slidesShowing = Math.floor((slider.viewport.width() +\n            slider.settings.slideMargin) / childWidth);\n        }\n      // if \"vertical\" mode, slides showing will always be minSlides\n      } else if (slider.settings.mode === 'vertical') {\n        slidesShowing = slider.settings.minSlides;\n      }\n      return slidesShowing;\n    };\n\n    /**\n     * Returns the number of pages (one full viewport of slides is one \"page\")\n     */\n    var getPagerQty = function() {\n      var pagerQty = 0,\n      breakPoint = 0,\n      counter = 0;\n      // if moveSlides is specified by the user\n      if (slider.settings.moveSlides > 0) {\n        if (slider.settings.infiniteLoop) {\n          pagerQty = Math.ceil(slider.children.length / getMoveBy());\n        } else {\n          // when breakpoint goes above children length, counter is the number of pages\n          while (breakPoint < slider.children.length) {\n            ++pagerQty;\n            breakPoint = counter + getNumberSlidesShowing();\n            counter += slider.settings.moveSlides <= getNumberSlidesShowing() ? slider.settings.moveSlides : getNumberSlidesShowing();\n          }\n        }\n      // if moveSlides is 0 (auto) divide children length by sides showing, then round up\n      } else {\n        pagerQty = Math.ceil(slider.children.length / getNumberSlidesShowing());\n      }\n      return pagerQty;\n    };\n\n    /**\n     * Returns the number of individual slides by which to shift the slider\n     */\n    var getMoveBy = function() {\n      // if moveSlides was set by the user and moveSlides is less than number of slides showing\n      if (slider.settings.moveSlides > 0 && slider.settings.moveSlides <= getNumberSlidesShowing()) {\n        return slider.settings.moveSlides;\n      }\n      // if moveSlides is 0 (auto)\n      return getNumberSlidesShowing();\n    };\n\n    /**\n     * Sets the slider's (el) left or top position\n     */\n    var setSlidePosition = function() {\n      var position, lastChild, lastShowingIndex;\n      // if last slide, not infinite loop, and number of children is larger than specified maxSlides\n      if (slider.children.length > slider.settings.maxSlides && slider.active.last && !slider.settings.infiniteLoop) {\n        if (slider.settings.mode === 'horizontal') {\n          // get the last child's position\n          lastChild = slider.children.last();\n          position = lastChild.position();\n          // set the left position\n          setPositionProperty(-(position.left - (slider.viewport.width() - lastChild.outerWidth())), 'reset', 0);\n        } else if (slider.settings.mode === 'vertical') {\n          // get the last showing index's position\n          lastShowingIndex = slider.children.length - slider.settings.minSlides;\n          position = slider.children.eq(lastShowingIndex).position();\n          // set the top position\n          setPositionProperty(-position.top, 'reset', 0);\n        }\n      // if not last slide\n      } else {\n        // get the position of the first showing slide\n        position = slider.children.eq(slider.active.index * getMoveBy()).position();\n        // check for last slide\n        if (slider.active.index === getPagerQty() - 1) { slider.active.last = true; }\n        // set the respective position\n        if (position !== undefined) {\n          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }\n          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }\n        }\n      }\n    };\n\n    /**\n     * Sets the el's animating property position (which in turn will sometimes animate el).\n     * If using CSS, sets the transform property. If not using CSS, sets the top / left property.\n     *\n     * @param value (int)\n     *  - the animating property's value\n     *\n     * @param type (string) 'slide', 'reset', 'ticker'\n     *  - the type of instance for which the function is being\n     *\n     * @param duration (int)\n     *  - the amount of time (in ms) the transition should occupy\n     *\n     * @param params (array) optional\n     *  - an optional parameter containing any variables that need to be passed in\n     */\n    var setPositionProperty = function(value, type, duration, params) {\n      var animateObj, propValue;\n      // use CSS transform\n      if (slider.usingCSS) {\n        // determine the translate3d value\n        propValue = slider.settings.mode === 'vertical' ? 'translate3d(0, ' + value + 'px, 0)' : 'translate3d(' + value + 'px, 0, 0)';\n        // add the CSS transition-duration\n        el.css('-' + slider.cssPrefix + '-transition-duration', duration / 1000 + 's');\n        if (type === 'slide') {\n          // set the property value\n          el.css(slider.animProp, propValue);\n          if (duration !== 0) {\n            // bind a callback method - executes when CSS transition completes\n            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {\n              //make sure it's the correct one\n              if (!$(e.target).is(el)) { return; }\n              // unbind the callback\n              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n              updateAfterSlideTransition();\n            });\n          } else { //duration = 0\n            updateAfterSlideTransition();\n          }\n        } else if (type === 'reset') {\n          el.css(slider.animProp, propValue);\n        } else if (type === 'ticker') {\n          // make the transition use 'linear'\n          el.css('-' + slider.cssPrefix + '-transition-timing-function', 'linear');\n          el.css(slider.animProp, propValue);\n          if (duration !== 0) {\n            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {\n              //make sure it's the correct one\n              if (!$(e.target).is(el)) { return; }\n              // unbind the callback\n              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n              // reset the position\n              setPositionProperty(params.resetValue, 'reset', 0);\n              // start the loop again\n              tickerLoop();\n            });\n          } else { //duration = 0\n            setPositionProperty(params.resetValue, 'reset', 0);\n            tickerLoop();\n          }\n        }\n      // use JS animate\n      } else {\n        animateObj = {};\n        animateObj[slider.animProp] = value;\n        if (type === 'slide') {\n          el.animate(animateObj, duration, slider.settings.easing, function() {\n            updateAfterSlideTransition();\n          });\n        } else if (type === 'reset') {\n          el.css(slider.animProp, value);\n        } else if (type === 'ticker') {\n          el.animate(animateObj, duration, 'linear', function() {\n            setPositionProperty(params.resetValue, 'reset', 0);\n            // run the recursive loop after animation\n            tickerLoop();\n          });\n        }\n      }\n    };\n\n    /**\n     * Populates the pager with proper amount of pages\n     */\n    var populatePager = function() {\n      var pagerHtml = '',\n      linkContent = '',\n      pagerQty = getPagerQty();\n      // loop through each pager item\n      for (var i = 0; i < pagerQty; i++) {\n        linkContent = '';\n        // if a buildPager function is supplied, use it to get pager link value, else use index + 1\n        if (slider.settings.buildPager && $.isFunction(slider.settings.buildPager) || slider.settings.pagerCustom) {\n          linkContent = slider.settings.buildPager(i);\n          slider.pagerEl.addClass('bx-custom-pager');\n        } else {\n          linkContent = i + 1;\n          slider.pagerEl.addClass('bx-default-pager');\n        }\n        // var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;\n        // add the markup to the string\n        pagerHtml += '<div class=\"bx-pager-item\"><a href=\"\" data-slide-index=\"' + i + '\" class=\"bx-pager-link\">' + linkContent + '</a></div>';\n      }\n      // populate the pager element with pager links\n      slider.pagerEl.html(pagerHtml);\n    };\n\n    /**\n     * Appends the pager to the controls element\n     */\n    var appendPager = function() {\n      if (!slider.settings.pagerCustom) {\n        // create the pager DOM element\n        slider.pagerEl = $('<div class=\"bx-pager\" />');\n        // if a pager selector was supplied, populate it with the pager\n        if (slider.settings.pagerSelector) {\n          $(slider.settings.pagerSelector).html(slider.pagerEl);\n        // if no pager selector was supplied, add it after the wrapper\n        } else {\n          slider.controls.el.addClass('bx-has-pager').append(slider.pagerEl);\n        }\n        // populate the pager\n        populatePager();\n      } else {\n        slider.pagerEl = $(slider.settings.pagerCustom);\n      }\n      // assign the pager click binding\n      slider.pagerEl.on('click touchend', 'a', clickPagerBind);\n    };\n\n    /**\n     * Appends prev / next controls to the controls element\n     */\n    var appendControls = function() {\n      slider.controls.next = $('<a class=\"bx-next\" href=\"\">' + slider.settings.nextText + '</a>');\n      slider.controls.prev = $('<a class=\"bx-prev\" href=\"\">' + slider.settings.prevText + '</a>');\n      // bind click actions to the controls\n      slider.controls.next.bind('click touchend', clickNextBind);\n      slider.controls.prev.bind('click touchend', clickPrevBind);\n      // if nextSelector was supplied, populate it\n      if (slider.settings.nextSelector) {\n        $(slider.settings.nextSelector).append(slider.controls.next);\n      }\n      // if prevSelector was supplied, populate it\n      if (slider.settings.prevSelector) {\n        $(slider.settings.prevSelector).append(slider.controls.prev);\n      }\n      // if no custom selectors were supplied\n      if (!slider.settings.nextSelector && !slider.settings.prevSelector) {\n        // add the controls to the DOM\n        slider.controls.directionEl = $('<div class=\"bx-controls-direction\" />');\n        // add the control elements to the directionEl\n        slider.controls.directionEl.append(slider.controls.prev).append(slider.controls.next);\n        // slider.viewport.append(slider.controls.directionEl);\n        slider.controls.el.addClass('bx-has-controls-direction').append(slider.controls.directionEl);\n      }\n    };\n\n    /**\n     * Appends start / stop auto controls to the controls element\n     */\n    var appendControlsAuto = function() {\n      slider.controls.start = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-start\" href=\"\">' + slider.settings.startText + '</a></div>');\n      slider.controls.stop = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-stop\" href=\"\">' + slider.settings.stopText + '</a></div>');\n      // add the controls to the DOM\n      slider.controls.autoEl = $('<div class=\"bx-controls-auto\" />');\n      // bind click actions to the controls\n      slider.controls.autoEl.on('click', '.bx-start', clickStartBind);\n      slider.controls.autoEl.on('click', '.bx-stop', clickStopBind);\n      // if autoControlsCombine, insert only the \"start\" control\n      if (slider.settings.autoControlsCombine) {\n        slider.controls.autoEl.append(slider.controls.start);\n      // if autoControlsCombine is false, insert both controls\n      } else {\n        slider.controls.autoEl.append(slider.controls.start).append(slider.controls.stop);\n      }\n      // if auto controls selector was supplied, populate it with the controls\n      if (slider.settings.autoControlsSelector) {\n        $(slider.settings.autoControlsSelector).html(slider.controls.autoEl);\n      // if auto controls selector was not supplied, add it after the wrapper\n      } else {\n        slider.controls.el.addClass('bx-has-controls-auto').append(slider.controls.autoEl);\n      }\n      // update the auto controls\n      updateAutoControls(slider.settings.autoStart ? 'stop' : 'start');\n    };\n\n    /**\n     * Appends image captions to the DOM\n     */\n    var appendCaptions = function() {\n      // cycle through each child\n      slider.children.each(function(index) {\n        // get the image title attribute\n        var title = $(this).find('img:first').attr('title');\n        // append the caption\n        if (title !== undefined && ('' + title).length) {\n          $(this).append('<div class=\"bx-caption\"><span>' + title + '</span></div>');\n        }\n      });\n    };\n\n    /**\n     * Click next binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickNextBind = function(e) {\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) { return; }\n      // if auto show is running, stop it\n      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      el.goToNextSlide();\n    };\n\n    /**\n     * Click prev binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickPrevBind = function(e) {\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) { return; }\n      // if auto show is running, stop it\n      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      el.goToPrevSlide();\n    };\n\n    /**\n     * Click start binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickStartBind = function(e) {\n      el.startAuto();\n      e.preventDefault();\n    };\n\n    /**\n     * Click stop binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickStopBind = function(e) {\n      el.stopAuto();\n      e.preventDefault();\n    };\n\n    /**\n     * Click pager binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickPagerBind = function(e) {\n      var pagerLink, pagerIndex;\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) {\n        return;\n      }\n      // if auto show is running, stop it\n      if (slider.settings.auto  && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      pagerLink = $(e.currentTarget);\n      if (pagerLink.attr('data-slide-index') !== undefined) {\n        pagerIndex = parseInt(pagerLink.attr('data-slide-index'));\n        // if clicked pager link is not active, continue with the goToSlide call\n        if (pagerIndex !== slider.active.index) { el.goToSlide(pagerIndex); }\n      }\n    };\n\n    /**\n     * Updates the pager links with an active class\n     *\n     * @param slideIndex (int)\n     *  - index of slide to make active\n     */\n    var updatePagerActive = function(slideIndex) {\n      // if \"short\" pager type\n      var len = slider.children.length; // nb of children\n      if (slider.settings.pagerType === 'short') {\n        if (slider.settings.maxSlides > 1) {\n          len = Math.ceil(slider.children.length / slider.settings.maxSlides);\n        }\n        slider.pagerEl.html((slideIndex + 1) + slider.settings.pagerShortSeparator + len);\n        return;\n      }\n      // remove all pager active classes\n      slider.pagerEl.find('a').removeClass('active');\n      // apply the active class for all pagers\n      slider.pagerEl.each(function(i, el) { $(el).find('a').eq(slideIndex).addClass('active'); });\n    };\n\n    /**\n     * Performs needed actions after a slide transition\n     */\n    var updateAfterSlideTransition = function() {\n      // if infinite loop is true\n      if (slider.settings.infiniteLoop) {\n        var position = '';\n        // first slide\n        if (slider.active.index === 0) {\n          // set the new position\n          position = slider.children.eq(0).position();\n        // carousel, last slide\n        } else if (slider.active.index === getPagerQty() - 1 && slider.carousel) {\n          position = slider.children.eq((getPagerQty() - 1) * getMoveBy()).position();\n        // last slide\n        } else if (slider.active.index === slider.children.length - 1) {\n          position = slider.children.eq(slider.children.length - 1).position();\n        }\n        if (position) {\n          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }\n          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }\n        }\n      }\n      // declare that the transition is complete\n      slider.working = false;\n      // onSlideAfter callback\n      slider.settings.onSlideAfter.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n    };\n\n    /**\n     * Updates the auto controls state (either active, or combined switch)\n     *\n     * @param state (string) \"start\", \"stop\"\n     *  - the new state of the auto show\n     */\n    var updateAutoControls = function(state) {\n      // if autoControlsCombine is true, replace the current control with the new state\n      if (slider.settings.autoControlsCombine) {\n        slider.controls.autoEl.html(slider.controls[state]);\n      // if autoControlsCombine is false, apply the \"active\" class to the appropriate control\n      } else {\n        slider.controls.autoEl.find('a').removeClass('active');\n        slider.controls.autoEl.find('a:not(.bx-' + state + ')').addClass('active');\n      }\n    };\n\n    /**\n     * Updates the direction controls (checks if either should be hidden)\n     */\n    var updateDirectionControls = function() {\n      if (getPagerQty() === 1) {\n        slider.controls.prev.addClass('disabled');\n        slider.controls.next.addClass('disabled');\n      } else if (!slider.settings.infiniteLoop && slider.settings.hideControlOnEnd) {\n        // if first slide\n        if (slider.active.index === 0) {\n          slider.controls.prev.addClass('disabled');\n          slider.controls.next.removeClass('disabled');\n        // if last slide\n        } else if (slider.active.index === getPagerQty() - 1) {\n          slider.controls.next.addClass('disabled');\n          slider.controls.prev.removeClass('disabled');\n        // if any slide in the middle\n        } else {\n          slider.controls.prev.removeClass('disabled');\n          slider.controls.next.removeClass('disabled');\n        }\n      }\n    };\n\n    /**\n     * Initializes the auto process\n     */\n    var initAuto = function() {\n      // if autoDelay was supplied, launch the auto show using a setTimeout() call\n      if (slider.settings.autoDelay > 0) {\n        var timeout = setTimeout(el.startAuto, slider.settings.autoDelay);\n      // if autoDelay was not supplied, start the auto show normally\n      } else {\n        el.startAuto();\n\n        //add focus and blur events to ensure its running if timeout gets paused\n        $(window).focus(function() {\n          el.startAuto();\n        }).blur(function() {\n          el.stopAuto();\n        });\n      }\n      // if autoHover is requested\n      if (slider.settings.autoHover) {\n        // on el hover\n        el.hover(function() {\n          // if the auto show is currently playing (has an active interval)\n          if (slider.interval) {\n            // stop the auto show and pass true argument which will prevent control update\n            el.stopAuto(true);\n            // create a new autoPaused value which will be used by the relative \"mouseout\" event\n            slider.autoPaused = true;\n          }\n        }, function() {\n          // if the autoPaused value was created be the prior \"mouseover\" event\n          if (slider.autoPaused) {\n            // start the auto show and pass true argument which will prevent control update\n            el.startAuto(true);\n            // reset the autoPaused value\n            slider.autoPaused = null;\n          }\n        });\n      }\n    };\n\n    /**\n     * Initializes the ticker process\n     */\n    var initTicker = function() {\n      var startPosition = 0,\n      position, transform, value, idx, ratio, property, newSpeed, totalDimens;\n      // if autoDirection is \"next\", append a clone of the entire slider\n      if (slider.settings.autoDirection === 'next') {\n        el.append(slider.children.clone().addClass('bx-clone'));\n      // if autoDirection is \"prev\", prepend a clone of the entire slider, and set the left position\n      } else {\n        el.prepend(slider.children.clone().addClass('bx-clone'));\n        position = slider.children.first().position();\n        startPosition = slider.settings.mode === 'horizontal' ? -position.left : -position.top;\n      }\n      setPositionProperty(startPosition, 'reset', 0);\n      // do not allow controls in ticker mode\n      slider.settings.pager = false;\n      slider.settings.controls = false;\n      slider.settings.autoControls = false;\n      // if autoHover is requested\n      if (slider.settings.tickerHover) {\n        if (slider.usingCSS) {\n          idx = slider.settings.mode === 'horizontal' ? 4 : 5;\n          slider.viewport.hover(function() {\n            transform = el.css('-' + slider.cssPrefix + '-transform');\n            value = parseFloat(transform.split(',')[idx]);\n            setPositionProperty(value, 'reset', 0);\n          }, function() {\n            totalDimens = 0;\n            slider.children.each(function(index) {\n              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);\n            });\n            // calculate the speed ratio (used to determine the new speed to finish the paused animation)\n            ratio = slider.settings.speed / totalDimens;\n            // determine which property to use\n            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';\n            // calculate the new speed\n            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(value))));\n            tickerLoop(newSpeed);\n          });\n        } else {\n          // on el hover\n          slider.viewport.hover(function() {\n            el.stop();\n          }, function() {\n            // calculate the total width of children (used to calculate the speed ratio)\n            totalDimens = 0;\n            slider.children.each(function(index) {\n              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);\n            });\n            // calculate the speed ratio (used to determine the new speed to finish the paused animation)\n            ratio = slider.settings.speed / totalDimens;\n            // determine which property to use\n            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';\n            // calculate the new speed\n            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(el.css(property)))));\n            tickerLoop(newSpeed);\n          });\n        }\n      }\n      // start the ticker loop\n      tickerLoop();\n    };\n\n    /**\n     * Runs a continuous loop, news ticker-style\n     */\n    var tickerLoop = function(resumeSpeed) {\n      var speed = resumeSpeed ? resumeSpeed : slider.settings.speed,\n      position = {left: 0, top: 0},\n      reset = {left: 0, top: 0},\n      animateProperty, resetValue, params;\n\n      // if \"next\" animate left position to last child, then reset left to 0\n      if (slider.settings.autoDirection === 'next') {\n        position = el.find('.bx-clone').first().position();\n      // if \"prev\" animate left position to 0, then reset left to first non-clone child\n      } else {\n        reset = slider.children.first().position();\n      }\n      animateProperty = slider.settings.mode === 'horizontal' ? -position.left : -position.top;\n      resetValue = slider.settings.mode === 'horizontal' ? -reset.left : -reset.top;\n      params = {resetValue: resetValue};\n      setPositionProperty(animateProperty, 'ticker', speed, params);\n    };\n\n    /**\n     * Check if el is on screen\n     */\n    var isOnScreen = function(el) {\n      var win = $(window),\n      viewport = {\n        top: win.scrollTop(),\n        left: win.scrollLeft()\n      },\n      bounds = el.offset();\n\n      viewport.right = viewport.left + win.width();\n      viewport.bottom = viewport.top + win.height();\n      bounds.right = bounds.left + el.outerWidth();\n      bounds.bottom = bounds.top + el.outerHeight();\n\n      return (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom));\n    };\n\n    /**\n     * Initializes keyboard events\n     */\n    var keyPress = function(e) {\n      var activeElementTag = document.activeElement.tagName.toLowerCase(),\n      tagFilters = 'input|textarea',\n      p = new RegExp(activeElementTag,['i']),\n      result = p.exec(tagFilters);\n\n      if (result == null && isOnScreen(el)) {\n        if (e.keyCode === 39) {\n          clickNextBind(e);\n          return false;\n        } else if (e.keyCode === 37) {\n          clickPrevBind(e);\n          return false;\n        }\n      }\n    };\n\n    /**\n     * Initializes touch events\n     */\n    var initTouch = function() {\n      // initialize object to contain all touch values\n      slider.touch = {\n        start: {x: 0, y: 0},\n        end: {x: 0, y: 0}\n      };\n      slider.viewport.bind('touchstart MSPointerDown pointerdown', onTouchStart);\n\n      //for browsers that have implemented pointer events and fire a click after\n      //every pointerup regardless of whether pointerup is on same screen location as pointerdown or not\n      slider.viewport.on('click', '.bxslider a', function(e) {\n        if (slider.viewport.hasClass('click-disabled')) {\n          e.preventDefault();\n          slider.viewport.removeClass('click-disabled');\n        }\n      });\n    };\n\n    /**\n     * Event handler for \"touchstart\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchStart = function(e) {\n      //disable slider controls while user is interacting with slides to avoid slider freeze that happens on touch devices when a slide swipe happens immediately after interacting with slider controls\n      slider.controls.el.addClass('disabled');\n\n      if (slider.working) {\n        e.preventDefault();\n        slider.controls.el.removeClass('disabled');\n      } else {\n        // record the original position when touch starts\n        slider.touch.originalPos = el.position();\n        var orig = e.originalEvent,\n        touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig];\n        // record the starting touch x, y coordinates\n        slider.touch.start.x = touchPoints[0].pageX;\n        slider.touch.start.y = touchPoints[0].pageY;\n\n        if (slider.viewport.get(0).setPointerCapture) {\n          slider.pointerId = orig.pointerId;\n          slider.viewport.get(0).setPointerCapture(slider.pointerId);\n        }\n        // bind a \"touchmove\" event to the viewport\n        slider.viewport.bind('touchmove MSPointerMove pointermove', onTouchMove);\n        // bind a \"touchend\" event to the viewport\n        slider.viewport.bind('touchend MSPointerUp pointerup', onTouchEnd);\n        slider.viewport.bind('MSPointerCancel pointercancel', onPointerCancel);\n      }\n    };\n\n    /**\n     * Cancel Pointer for Windows Phone\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onPointerCancel = function(e) {\n      /* onPointerCancel handler is needed to deal with situations when a touchend\n      doesn't fire after a touchstart (this happens on windows phones only) */\n      setPositionProperty(slider.touch.originalPos.left, 'reset', 0);\n\n      //remove handlers\n      slider.controls.el.removeClass('disabled');\n      slider.viewport.unbind('MSPointerCancel pointercancel', onPointerCancel);\n      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);\n      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);\n      if (slider.viewport.get(0).releasePointerCapture) {\n        slider.viewport.get(0).releasePointerCapture(slider.pointerId);\n      }\n    };\n\n    /**\n     * Event handler for \"touchmove\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchMove = function(e) {\n      var orig = e.originalEvent,\n      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],\n      // if scrolling on y axis, do not prevent default\n      xMovement = Math.abs(touchPoints[0].pageX - slider.touch.start.x),\n      yMovement = Math.abs(touchPoints[0].pageY - slider.touch.start.y),\n      value = 0,\n      change = 0;\n\n      // x axis swipe\n      if ((xMovement * 3) > yMovement && slider.settings.preventDefaultSwipeX) {\n        e.preventDefault();\n      // y axis swipe\n      } else if ((yMovement * 3) > xMovement && slider.settings.preventDefaultSwipeY) {\n        e.preventDefault();\n      }\n      if (slider.settings.mode !== 'fade' && slider.settings.oneToOneTouch) {\n        // if horizontal, drag along x axis\n        if (slider.settings.mode === 'horizontal') {\n          change = touchPoints[0].pageX - slider.touch.start.x;\n          value = slider.touch.originalPos.left + change;\n        // if vertical, drag along y axis\n        } else {\n          change = touchPoints[0].pageY - slider.touch.start.y;\n          value = slider.touch.originalPos.top + change;\n        }\n        setPositionProperty(value, 'reset', 0);\n      }\n    };\n\n    /**\n     * Event handler for \"touchend\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchEnd = function(e) {\n      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);\n      //enable slider controls as soon as user stops interacing with slides\n      slider.controls.el.removeClass('disabled');\n      var orig    = e.originalEvent,\n      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],\n      value       = 0,\n      distance    = 0;\n      // record end x, y positions\n      slider.touch.end.x = touchPoints[0].pageX;\n      slider.touch.end.y = touchPoints[0].pageY;\n      // if fade mode, check if absolute x distance clears the threshold\n      if (slider.settings.mode === 'fade') {\n        distance = Math.abs(slider.touch.start.x - slider.touch.end.x);\n        if (distance >= slider.settings.swipeThreshold) {\n          if (slider.touch.start.x > slider.touch.end.x) {\n            el.goToNextSlide();\n          } else {\n            el.goToPrevSlide();\n          }\n          el.stopAuto();\n        }\n      // not fade mode\n      } else {\n        // calculate distance and el's animate property\n        if (slider.settings.mode === 'horizontal') {\n          distance = slider.touch.end.x - slider.touch.start.x;\n          value = slider.touch.originalPos.left;\n        } else {\n          distance = slider.touch.end.y - slider.touch.start.y;\n          value = slider.touch.originalPos.top;\n        }\n        // if not infinite loop and first / last slide, do not attempt a slide transition\n        if (!slider.settings.infiniteLoop && ((slider.active.index === 0 && distance > 0) || (slider.active.last && distance < 0))) {\n          setPositionProperty(value, 'reset', 200);\n        } else {\n          // check if distance clears threshold\n          if (Math.abs(distance) >= slider.settings.swipeThreshold) {\n            if (distance < 0) {\n              el.goToNextSlide();\n            } else {\n              el.goToPrevSlide();\n            }\n            el.stopAuto();\n          } else {\n            // el.animate(property, 200);\n            setPositionProperty(value, 'reset', 200);\n          }\n        }\n      }\n      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);\n      if (slider.viewport.get(0).releasePointerCapture) {\n        slider.viewport.get(0).releasePointerCapture(slider.pointerId);\n      }\n    };\n\n    /**\n     * Window resize event callback\n     */\n    var resizeWindow = function(e) {\n      // don't do anything if slider isn't initialized.\n      if (!slider.initialized) { return; }\n      // Delay if slider working.\n      if (slider.working) {\n        window.setTimeout(resizeWindow, 10);\n      } else {\n        // get the new window dimens (again, thank you IE)\n        var windowWidthNew = $(window).width(),\n        windowHeightNew = $(window).height();\n        // make sure that it is a true window resize\n        // *we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements\n        // are resized. Can you just die already?*\n        if (windowWidth !== windowWidthNew || windowHeight !== windowHeightNew) {\n          // set the new window dimens\n          windowWidth = windowWidthNew;\n          windowHeight = windowHeightNew;\n          // update all dynamic elements\n          el.redrawSlider();\n          // Call user resize handler\n          slider.settings.onSliderResize.call(el, slider.active.index);\n        }\n      }\n    };\n\n    /**\n     * Adds an aria-hidden=true attribute to each element\n     *\n     * @param startVisibleIndex (int)\n     *  - the first visible element's index\n     */\n    var applyAriaHiddenAttributes = function(startVisibleIndex) {\n      var numberOfSlidesShowing = getNumberSlidesShowing();\n      // only apply attributes if the setting is enabled and not in ticker mode\n      if (slider.settings.ariaHidden && !slider.settings.ticker) {\n        // add aria-hidden=true to all elements\n        slider.children.attr('aria-hidden', 'true');\n        // get the visible elements and change to aria-hidden=false\n        slider.children.slice(startVisibleIndex, startVisibleIndex + numberOfSlidesShowing).attr('aria-hidden', 'false');\n      }\n    };\n\n    /**\n     * Returns index according to present page range\n     *\n     * @param slideOndex (int)\n     *  - the desired slide index\n     */\n    var setSlideIndex = function(slideIndex) {\n      if (slideIndex < 0) {\n        if (slider.settings.infiniteLoop) {\n          return getPagerQty() - 1;\n        }else {\n          //we don't go to undefined slides\n          return slider.active.index;\n        }\n      // if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)\n      } else if (slideIndex >= getPagerQty()) {\n        if (slider.settings.infiniteLoop) {\n          return 0;\n        } else {\n          //we don't move to undefined pages\n          return slider.active.index;\n        }\n      // set active index to requested slide\n      } else {\n        return slideIndex;\n      }\n    };\n\n    /**\n     * ===================================================================================\n     * = PUBLIC FUNCTIONS\n     * ===================================================================================\n     */\n\n    /**\n     * Performs slide transition to the specified slide\n     *\n     * @param slideIndex (int)\n     *  - the destination slide's index (zero-based)\n     *\n     * @param direction (string)\n     *  - INTERNAL USE ONLY - the direction of travel (\"prev\" / \"next\")\n     */\n    el.goToSlide = function(slideIndex, direction) {\n      // onSlideBefore, onSlideNext, onSlidePrev callbacks\n      // Allow transition canceling based on returned value\n      var performTransition = true,\n      moveBy = 0,\n      position = {left: 0, top: 0},\n      lastChild = null,\n      lastShowingIndex, eq, value, requestEl;\n      // store the old index\n      slider.oldIndex = slider.active.index;\n      //set new index\n      slider.active.index = setSlideIndex(slideIndex);\n\n      // if plugin is currently in motion, ignore request\n      if (slider.working || slider.active.index === slider.oldIndex) { return; }\n      // declare that plugin is in motion\n      slider.working = true;\n\n      performTransition = slider.settings.onSlideBefore.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n\n      // If transitions canceled, reset and return\n      if (typeof (performTransition) !== 'undefined' && !performTransition) {\n        slider.active.index = slider.oldIndex; // restore old index\n        slider.working = false; // is not in motion\n        return;\n      }\n\n      if (direction === 'next') {\n        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel\n        if (!slider.settings.onSlideNext.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {\n          performTransition = false;\n        }\n      } else if (direction === 'prev') {\n        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel\n        if (!slider.settings.onSlidePrev.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {\n          performTransition = false;\n        }\n      }\n\n      // check if last slide\n      slider.active.last = slider.active.index >= getPagerQty() - 1;\n      // update the pager with active class\n      if (slider.settings.pager || slider.settings.pagerCustom) { updatePagerActive(slider.active.index); }\n      // // check for direction control update\n      if (slider.settings.controls) { updateDirectionControls(); }\n      // if slider is set to mode: \"fade\"\n      if (slider.settings.mode === 'fade') {\n        // if adaptiveHeight is true and next height is different from current height, animate to the new height\n        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {\n          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n        }\n        // fade out the visible child and reset its z-index value\n        slider.children.filter(':visible').fadeOut(slider.settings.speed).css({zIndex: 0});\n        // fade in the newly requested slide\n        slider.children.eq(slider.active.index).css('zIndex', slider.settings.slideZIndex + 1).fadeIn(slider.settings.speed, function() {\n          $(this).css('zIndex', slider.settings.slideZIndex);\n          updateAfterSlideTransition();\n        });\n      // slider mode is not \"fade\"\n      } else {\n        // if adaptiveHeight is true and next height is different from current height, animate to the new height\n        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {\n          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n        }\n        // if carousel and not infinite loop\n        if (!slider.settings.infiniteLoop && slider.carousel && slider.active.last) {\n          if (slider.settings.mode === 'horizontal') {\n            // get the last child position\n            lastChild = slider.children.eq(slider.children.length - 1);\n            position = lastChild.position();\n            // calculate the position of the last slide\n            moveBy = slider.viewport.width() - lastChild.outerWidth();\n          } else {\n            // get last showing index position\n            lastShowingIndex = slider.children.length - slider.settings.minSlides;\n            position = slider.children.eq(lastShowingIndex).position();\n          }\n          // horizontal carousel, going previous while on first slide (infiniteLoop mode)\n        } else if (slider.carousel && slider.active.last && direction === 'prev') {\n          // get the last child position\n          eq = slider.settings.moveSlides === 1 ? slider.settings.maxSlides - getMoveBy() : ((getPagerQty() - 1) * getMoveBy()) - (slider.children.length - slider.settings.maxSlides);\n          lastChild = el.children('.bx-clone').eq(eq);\n          position = lastChild.position();\n        // if infinite loop and \"Next\" is clicked on the last slide\n        } else if (direction === 'next' && slider.active.index === 0) {\n          // get the last clone position\n          position = el.find('> .bx-clone').eq(slider.settings.maxSlides).position();\n          slider.active.last = false;\n        // normal non-zero requests\n        } else if (slideIndex >= 0) {\n          //parseInt is applied to allow floats for slides/page\n          requestEl = slideIndex * parseInt(getMoveBy());\n          position = slider.children.eq(requestEl).position();\n        }\n\n        /* If the position doesn't exist\n         * (e.g. if you destroy the slider on a next click),\n         * it doesn't throw an error.\n         */\n        if (typeof (position) !== 'undefined') {\n          value = slider.settings.mode === 'horizontal' ? -(position.left - moveBy) : -position.top;\n          // plugin values to be animated\n          setPositionProperty(value, 'slide', slider.settings.speed);\n        } else {\n          slider.working = false;\n        }\n      }\n      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }\n    };\n\n    /**\n     * Transitions to the next slide in the show\n     */\n    el.goToNextSlide = function() {\n      // if infiniteLoop is false and last page is showing, disregard call\n      if (!slider.settings.infiniteLoop && slider.active.last) { return; }\n      var pagerIndex = parseInt(slider.active.index) + 1;\n      el.goToSlide(pagerIndex, 'next');\n    };\n\n    /**\n     * Transitions to the prev slide in the show\n     */\n    el.goToPrevSlide = function() {\n      // if infiniteLoop is false and last page is showing, disregard call\n      if (!slider.settings.infiniteLoop && slider.active.index === 0) { return; }\n      var pagerIndex = parseInt(slider.active.index) - 1;\n      el.goToSlide(pagerIndex, 'prev');\n    };\n\n    /**\n     * Starts the auto show\n     *\n     * @param preventControlUpdate (boolean)\n     *  - if true, auto controls state will not be updated\n     */\n    el.startAuto = function(preventControlUpdate) {\n      // if an interval already exists, disregard call\n      if (slider.interval) { return; }\n      // create an interval\n      slider.interval = setInterval(function() {\n        if (slider.settings.autoDirection === 'next') {\n          el.goToNextSlide();\n        } else {\n          el.goToPrevSlide();\n        }\n      }, slider.settings.pause);\n      // if auto controls are displayed and preventControlUpdate is not true\n      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('stop'); }\n    };\n\n    /**\n     * Stops the auto show\n     *\n     * @param preventControlUpdate (boolean)\n     *  - if true, auto controls state will not be updated\n     */\n    el.stopAuto = function(preventControlUpdate) {\n      // if no interval exists, disregard call\n      if (!slider.interval) { return; }\n      // clear the interval\n      clearInterval(slider.interval);\n      slider.interval = null;\n      // if auto controls are displayed and preventControlUpdate is not true\n      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('start'); }\n    };\n\n    /**\n     * Returns current slide index (zero-based)\n     */\n    el.getCurrentSlide = function() {\n      return slider.active.index;\n    };\n\n    /**\n     * Returns current slide element\n     */\n    el.getCurrentSlideElement = function() {\n      return slider.children.eq(slider.active.index);\n    };\n\n    /**\n     * Returns a slide element\n     * @param index (int)\n     *  - The index (zero-based) of the element you want returned.\n     */\n    el.getSlideElement = function(index) {\n      return slider.children.eq(index);\n    };\n\n    /**\n     * Returns number of slides in show\n     */\n    el.getSlideCount = function() {\n      return slider.children.length;\n    };\n\n    /**\n     * Return slider.working variable\n     */\n    el.isWorking = function() {\n      return slider.working;\n    };\n\n    /**\n     * Update all dynamic slider elements\n     */\n    el.redrawSlider = function() {\n      // resize all children in ratio to new screen size\n      slider.children.add(el.find('.bx-clone')).outerWidth(getSlideWidth());\n      // adjust the height\n      slider.viewport.css('height', getViewportHeight());\n      // update the slide position\n      if (!slider.settings.ticker) { setSlidePosition(); }\n      // if active.last was true before the screen resize, we want\n      // to keep it last no matter what screen size we end on\n      if (slider.active.last) { slider.active.index = getPagerQty() - 1; }\n      // if the active index (page) no longer exists due to the resize, simply set the index as last\n      if (slider.active.index >= getPagerQty()) { slider.active.last = true; }\n      // if a pager is being displayed and a custom pager is not being used, update it\n      if (slider.settings.pager && !slider.settings.pagerCustom) {\n        populatePager();\n        updatePagerActive(slider.active.index);\n      }\n      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }\n    };\n\n    /**\n     * Destroy the current instance of the slider (revert everything back to original state)\n     */\n    el.destroySlider = function() {\n      // don't do anything if slider has already been destroyed\n      if (!slider.initialized) { return; }\n      slider.initialized = false;\n      $('.bx-clone', this).remove();\n      slider.children.each(function() {\n        if ($(this).data('origStyle') !== undefined) {\n          $(this).attr('style', $(this).data('origStyle'));\n        } else {\n          $(this).removeAttr('style');\n        }\n      });\n      if ($(this).data('origStyle') !== undefined) {\n        this.attr('style', $(this).data('origStyle'));\n      } else {\n        $(this).removeAttr('style');\n      }\n      $(this).unwrap().unwrap();\n      if (slider.controls.el) { slider.controls.el.remove(); }\n      if (slider.controls.next) { slider.controls.next.remove(); }\n      if (slider.controls.prev) { slider.controls.prev.remove(); }\n      if (slider.pagerEl && slider.settings.controls && !slider.settings.pagerCustom) { slider.pagerEl.remove(); }\n      $('.bx-caption', this).remove();\n      if (slider.controls.autoEl) { slider.controls.autoEl.remove(); }\n      clearInterval(slider.interval);\n      if (slider.settings.responsive) { $(window).unbind('resize', resizeWindow); }\n      if (slider.settings.keyboardEnabled) { $(document).unbind('keydown', keyPress); }\n      //remove self reference in data\n      $(this).removeData('bxSlider');\n    };\n\n    /**\n     * Reload the slider (revert all DOM changes, and re-initialize)\n     */\n    el.reloadSlider = function(settings) {\n      if (settings !== undefined) { options = settings; }\n      el.destroySlider();\n      init();\n      //store reference to self in order to access public functions later\n      $(el).data('bxSlider', this);\n    };\n\n    init();\n\n    $(el).data('bxSlider', this);\n\n    // returns the current jQuery object\n    return this;\n  };\n\n})(jQuery);\n"]}